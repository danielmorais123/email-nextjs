import Head from "next/head";
import { poppins } from "../fonts/fonts";
import Navbar from "../components/Navbar";
import LeftEmailSide from "../components/LeftEmailSide";
import RightEmailSide from "../components/RightEmailSide";
import { useEffect } from "react";
import { useSession } from "@supabase/auth-helpers-react";
import axios from "axios";
import { BASE_URL } from "../urls";
import { useDispatch, useSelector } from "react-redux";
import { selectUser, setUser } from "../redux/slices/authUser";
import Login from "../components/Login";
import { supabase } from "../database/supabase";
import { User } from "../types/types";

export default function Home() {
  const session = useSession();
  const dispatch = useDispatch();
  const authUser: User = useSelector(selectUser);

  useEffect(() => {
    if (!session) {
      dispatch(setUser(null));
      return;
    }

    axios
      .post(`${BASE_URL}/api/users`, {
        email: session?.user.email,
        provider: session?.user?.app_metadata?.provider,
        photoProfile: session?.user?.user_metadata?.avatar_url,
        emailConfirmed: session?.user?.user_metadata?.email_verified,
        displayName: session?.user?.user_metadata?.name,
        createdAt: new Date(),
      })
      .then((response) => {
        if (response?.data?.user) {
          dispatch(setUser(response?.data?.user));
          if (response?.data?.inserted) {
            supabase
              .from("user")
              .insert({
                id: response?.data?.user?._id,
              })
              .then((res) => console.log({ supa: res }));
          }
        } else {
          dispatch(setUser(null));
        }
      });
  }, [session]);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div
        className={`${poppins.className} text-[#1a1a1a] min-h-screen ${session? "bg-[#f1f3f7] items-center flex-col" : "bg-[#3b3b3b] items-start lg:items-center justify-center"}  w-full flex `}
      >
        {session ? (
          <>
            <div className="md:w-full mx-auto">
              <Navbar />
            </div>
            <div className="mt-5 flex md:w-[95%] flex-col md:flex-row md:mx-auto md:space-x-4 space-y-4 md:space-y-0">
              <LeftEmailSide />
              <RightEmailSide />
            </div>
          </>
        ) : (
          <Login />
        )}
      </div>
    </>
  );
}
